<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="Compress your images online with our efficient tool. Reduce file size while maintaining quality. Perfect for web optimization and faster loading.">
    <meta name="keywords" content="image compressor, reduce image size, optimize images, photo compression, web optimization">
    <meta name="author" content="ImageCompressor Pro">
    <title>ImageCompressor Pro - Efficient Image Compression Tool</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-XXXXXXXXXXXXXXXX" crossorigin="anonymous"></script>
    <style>
        :root {
            --primary: #4361ee;
            --primary-dark: #3a56d4;
            --secondary: #7209b7;
            --light: #f8f9fa;
            --dark: #212529;
            --gray: #6c757d;
            --success: #4cc9f0;
            --warning: #f9c74f;
            --danger: #f94144;
            --border-radius: 12px;
            --shadow: 0 4px 20px rgba(0,0,0,0.08);
            --transition: all 0.3s ease;
        }
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Poppins', sans-serif;
        }
        
        body {
            background: linear-gradient(135deg, #f5f7fa 0%, #e4e7f1 100%);
            color: var(--dark);
            line-height: 1.6;
            min-height: 100vh;
            padding-bottom: 40px;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 20px;
        }
        
        header {
            background: linear-gradient(90deg, var(--primary), var(--secondary));
            color: white;
            padding: 30px 0;
            text-align: center;
            box-shadow: var(--shadow);
            position: relative;
            overflow: hidden;
        }
        
        header::before {
            content: "";
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: radial-gradient(circle, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0) 70%);
            transform: rotate(30deg);
        }
        
        header h1 {
            font-size: 2.8rem;
            margin-bottom: 10px;
            position: relative;
            z-index: 2;
        }
        
        header p {
            font-size: 1.2rem;
            max-width: 700px;
            margin: 0 auto;
            opacity: 0.9;
            position: relative;
            z-index: 2;
        }
        
        .ad-container {
            background: white;
            border-radius: var(--border-radius);
            margin: 25px auto;
            padding: 15px;
            text-align: center;
            box-shadow: var(--shadow);
            max-width: 1000px;
        }
        
        .ad-label {
            display: inline-block;
            background: var(--gray);
            color: white;
            font-size: 0.75rem;
            padding: 3px 10px;
            border-radius: 20px;
            margin-bottom: 10px;
        }
        
        .ad-placeholder {
            background: linear-gradient(45deg, #f0f0f0, #e0e0e0);
            height: 90px;
            border-radius: 8px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: var(--gray);
            font-weight: 500;
        }
        
        .main-content {
            display: grid;
            grid-template-columns: 1fr;
            gap: 30px;
            margin-top: 30px;
        }
        
        @media (min-width: 992px) {
            .main-content {
                grid-template-columns: 1fr 1fr;
            }
        }
        
        .upload-section, .preview-section {
            background: white;
            border-radius: var(--border-radius);
            padding: 30px;
            box-shadow: var(--shadow);
        }
        
        .section-title {
            font-size: 1.5rem;
            margin-bottom: 20px;
            color: var(--primary);
            display: flex;
            align-items: center;
            gap: 10px;
        }
        
        .section-title i {
            background: linear-gradient(45deg, var(--primary), var(--secondary));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }
        
        .upload-area {
            border: 2px dashed #d1d5db;
            border-radius: var(--border-radius);
            padding: 40px 20px;
            text-align: center;
            cursor: pointer;
            transition: var(--transition);
            background: #f9fafb;
            position: relative;
        }
        
        .upload-area:hover, .upload-area.drag-over {
            border-color: var(--primary);
            background: rgba(67, 97, 238, 0.05);
        }
        
        .upload-icon {
            font-size: 3rem;
            color: var(--primary);
            margin-bottom: 15px;
        }
        
        .upload-text {
            margin-bottom: 20px;
        }
        
        .btn {
            display: inline-block;
            background: linear-gradient(45deg, var(--primary), var(--secondary));
            color: white;
            border: none;
            padding: 12px 30px;
            border-radius: 50px;
            font-size: 1rem;
            font-weight: 600;
            cursor: pointer;
            transition: var(--transition);
            box-shadow: 0 4px 15px rgba(67, 97, 238, 0.3);
        }
        
        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(67, 97, 238, 0.4);
        }
        
        .btn:active {
            transform: translateY(0);
        }
        
        .btn i {
            margin-right: 8px;
        }
        
        .btn:disabled {
            background: #c1c4d6;
            cursor: not-allowed;
            transform: none;
            box-shadow: none;
        }
        
        .controls {
            margin: 30px 0;
        }
        
        .control-group {
            margin-bottom: 25px;
        }
        
        label {
            display: block;
            margin-bottom: 8px;
            font-weight: 600;
            color: var(--dark);
        }
        
        .slider-container {
            display: flex;
            align-items: center;
            gap: 15px;
        }
        
        input[type="range"] {
            flex: 1;
            height: 8px;
            -webkit-appearance: none;
            background: #e9ecef;
            border-radius: 10px;
            outline: none;
        }
        
        input[type="range"]::-webkit-slider-thumb {
            -webkit-appearance: none;
            width: 22px;
            height: 22px;
            background: linear-gradient(45deg, var(--primary), var(--secondary));
            border-radius: 50%;
            cursor: pointer;
            box-shadow: 0 2px 6px rgba(0,0,0,0.2);
        }
        
        .slider-value {
            background: var(--primary);
            color: white;
            width: 50px;
            text-align: center;
            padding: 5px;
            border-radius: 6px;
            font-weight: 600;
        }
        
        .preview-area {
            display: flex;
            flex-direction: column;
            gap: 25px;
        }
        
        .image-container {
            position: relative;
            border-radius: var(--border-radius);
            overflow: hidden;
            background: #f8f9fa;
            border: 1px solid #e9ecef;
            min-height: 200px;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        
        .image-container img {
            max-width: 100%;
            max-height: 300px;
            display: block;
            object-fit: contain;
        }
        
        .image-placeholder {
            text-align: center;
            color: var(--gray);
            padding: 20px;
        }
        
        .image-placeholder i {
            font-size: 3rem;
            margin-bottom: 15px;
            color: #dee2e6;
        }
        
        .stats {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 15px;
        }
        
        .stat-card {
            background: #f8f9fa;
            border-radius: var(--border-radius);
            padding: 15px;
            text-align: center;
            border: 1px solid #e9ecef;
        }
        
        .stat-value {
            font-size: 1.3rem;
            font-weight: 700;
            color: var(--primary);
            margin: 8px 0;
        }
        
        .stat-label {
            font-size: 0.9rem;
            color: var(--gray);
        }
        
        .savings {
            color: #20bf6b;
        }
        
        .actions {
            display: flex;
            gap: 15px;
            flex-wrap: wrap;
        }
        
        .btn-outline {
            background: transparent;
            color: var(--primary);
            border: 2px solid var(--primary);
            box-shadow: none;
        }
        
        .btn-outline:hover {
            background: rgba(67, 97, 238, 0.05);
        }
        
        .compression-info {
            background: #e7f4ff;
            border-left: 4px solid var(--primary);
            padding: 15px;
            border-radius: 0 var(--border-radius) var(--border-radius) 0;
            margin-top: 25px;
        }
        
        .compression-info h3 {
            margin-bottom: 10px;
            color: var(--primary);
        }
        
        footer {
            text-align: center;
            margin-top: 50px;
            color: var(--gray);
            font-size: 0.9rem;
        }
        
        .hidden {
            display: none;
        }
        
        .file-info {
            background: #f8f9fa;
            border-radius: 8px;
            padding: 12px;
            margin-top: 15px;
            font-size: 0.9rem;
        }
        
        .format-options {
            display: flex;
            gap: 20px;
            margin-top: 10px;
        }
        
        .format-option {
            display: flex;
            align-items: center;
            gap: 5px;
        }
        
        .progress-container {
            height: 8px;
            background: #e9ecef;
            border-radius: 4px;
            margin-top: 10px;
            overflow: hidden;
        }
        
        .progress-bar {
            height: 100%;
            background: linear-gradient(90deg, var(--primary), var(--secondary));
            width: 0%;
            transition: width 0.3s ease;
        }
        
        .compression-tips {
            background: #fff8e6;
            border-left: 4px solid var(--warning);
            padding: 15px;
            border-radius: 0 var(--border-radius) var(--border-radius) 0;
            margin-top: 15px;
        }
        
        .compression-tips h3 {
            margin-bottom: 10px;
            color: var(--warning);
        }
        
        .compression-tips ul {
            padding-left: 20px;
        }
        
        .compression-tips li {
            margin-bottom: 8px;
        }
        
        .notification {
            position: fixed;
            top: 20px;
            right: 20px;
            padding: 15px 25px;
            background: white;
            border-radius: var(--border-radius);
            box-shadow: var(--shadow);
            border-left: 4px solid var(--success);
            transform: translateX(150%);
            transition: transform 0.3s ease;
            z-index: 1000;
        }
        
        .notification.show {
            transform: translateX(0);
        }
        
        @media (max-width: 768px) {
            header h1 {
                font-size: 2.2rem;
            }
            
            .main-content {
                grid-template-columns: 1fr;
            }
            
            .actions {
                flex-direction: column;
            }
            
            .format-options {
                flex-direction: column;
                gap: 10px;
            }
        }
        
        /* Loading spinner */
        .spinner {
            width: 40px;
            height: 40px;
            border: 4px solid rgba(67, 97, 238, 0.2);
            border-top: 4px solid var(--primary);
            border-radius: 50%;
            animation: spin 1s linear infinite;
            margin: 20px auto;
        }
        
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        
        .quality-indicator {
            display: flex;
            justify-content: space-between;
            margin-top: 5px;
            font-size: 0.85rem;
            color: var(--gray);
        }
    </style>
</head>
<body>
    <header>
        <div class="container">
            <h1><i class="fas fa-compress-alt"></i> ImageCompressor Pro</h1>
            <p>Optimize your images for web and mobile with our powerful compression tool. Reduce file size without noticeable quality loss.</p>
        </div>
    </header>
    
    <div class="container">
        <!-- Top Ad Container -->
        <div class="ad-container">
            <span class="ad-label">ADVERTISEMENT</span>
            <div class="ad-placeholder">
                <!-- Google AdSense Ad Unit (Top) -->
                <!-- Replace with your AdSense code -->
                <ins class="adsbygoogle"
                     style="display:block"
                     data-ad-client="ca-pub-XXXXXXXXXXXXXXXX"
                     data-ad-slot="XXXXXXXXXX"
                     data-ad-format="auto"
                     data-full-width-responsive="true"></ins>
                <script>
                     (adsbygoogle = window.adsbygoogle || []).push({});
                </script>
            </div>
        </div>
        
        <div class="main-content">
            <div class="upload-section">
                <h2 class="section-title"><i class="fas fa-cloud-upload-alt"></i> Upload Image</h2>
                
                <div class="upload-area" id="dropArea">
                    <div class="upload-icon">
                        <i class="fas fa-file-image"></i>
                    </div>
                    <p class="upload-text">Drag & drop your image here or click to browse</p>
                    <button class="btn" id="browseBtn"><i class="fas fa-folder-open"></i> Select Image</button>
                    <input type="file" id="fileInput" accept="image/*" class="hidden">
                </div>
                
                <div id="fileDetails" class="file-info hidden">
                    <p><strong>File name:</strong> <span id="fileName"></span></p>
                    <p><strong>Original size:</strong> <span id="originalSizeInfo">0 KB</span></p>
                    <div class="progress-container">
                        <div class="progress-bar" id="compressionProgress"></div>
                    </div>
                </div>
                
                <div class="controls">
                    <div class="control-group">
                        <label for="compressionLevel">Compression Level</label>
                        <div class="slider-container">
                            <input type="range" id="compressionLevel" min="40" max="90" value="70">
                            <div class="slider-value">70%</div>
                        </div>
                        <div class="quality-indicator">
                            <span>Smaller File</span>
                            <span>Better Quality</span>
                        </div>
                    </div>
                    
                    <div class="control-group">
                        <label>Output Format</label>
                        <div class="format-options">
                            <div class="format-option">
                                <input type="radio" id="formatJpg" name="format" value="jpg" checked>
                                <label for="formatJpg">JPG (Best for photos)</label>
                            </div>
                            <div class="format-option">
                                <input type="radio" id="formatWebp" name="format" value="webp">
                                <label for="formatWebp">WebP (Modern format)</label>
                            </div>
                            <div class="format-option">
                                <input type="radio" id="formatPng" name="format" value="png">
                                <label for="formatPng">PNG (For transparency)</label>
                            </div>
                        </div>
                    </div>
                </div>
                
                <button class="btn" id="compressBtn" disabled><i class="fas fa-compress-alt"></i> Compress Image</button>
                
                <div class="compression-info">
                    <h3>How Compression Works</h3>
                    <p>Our algorithm uses advanced techniques to reduce file size while preserving visual quality. Higher values maintain more detail but produce larger files.</p>
                </div>
                
                <div class="compression-tips">
                    <h3>Optimization Tips</h3>
                    <ul>
                        <li>For photos, use JPG format with 60-80% compression</li>
                        <li>WebP format provides superior compression for modern browsers</li>
                        <li>PNG is best for images with transparency</li>
                        <li>Start with 70% compression and adjust as needed</li>
                    </ul>
                </div>
            </div>
            
            <div class="preview-section">
                <h2 class="section-title"><i class="fas fa-eye"></i> Preview & Download</h2>
                
                <div class="preview-area">
                    <div class="image-container">
                        <div class="image-placeholder" id="imagePlaceholder">
                            <i class="fas fa-image"></i>
                            <p>Compressed image will appear here</p>
                        </div>
                        <img id="previewImage" class="hidden">
                    </div>
                    
                    <div class="stats">
                        <div class="stat-card">
                            <div class="stat-label">Original Size</div>
                            <div class="stat-value" id="originalSize">0 KB</div>
                        </div>
                        <div class="stat-card">
                            <div class="stat-label">Compressed Size</div>
                            <div class="stat-value" id="compressedSize">0 KB</div>
                        </div>
                        <div class="stat-card">
                            <div class="stat-label">Savings</div>
                            <div class="stat-value savings" id="savings">0%</div>
                        </div>
                        <div class="stat-card">
                            <div class="stat-label">Quality</div>
                            <div class="stat-value" id="qualityValue">70%</div>
                        </div>
                    </div>
                    
                    <div class="actions">
                        <button class="btn" id="downloadBtn" disabled><i class="fas fa-download"></i> Download Compressed</button>
                        <button class="btn btn-outline" id="newImageBtn"><i class="fas fa-sync-alt"></i> New Image</button>
                    </div>
                    
                    <div class="compression-tips">
                        <h3>Did You Know?</h3>
                        <p>Properly compressed images can improve website loading times by up to 50%. For a 2MB photo, 70% compression typically reduces file size to 300-500KB while maintaining good quality.</p>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Bottom Ad Container -->
        <div class="ad-container">
            <span class="ad-label">ADVERTISEMENT</span>
            <div class="ad-placeholder">
                <!-- Google AdSense Ad Unit (Bottom) -->
                <!-- Replace with your AdSense code -->
                <ins class="adsbygoogle"
                     style="display:block"
                     data-ad-client="ca-pub-XXXXXXXXXXXXXXXX"
                     data-ad-slot="XXXXXXXXXX"
                     data-ad-format="auto"
                     data-full-width-responsive="true"></ins>
                <script>
                     (adsbygoogle = window.adsbygoogle || []).push({});
                </script>
            </div>
        </div>
    </div>
    
    <footer class="container">
        <p>© 2023 ImageCompressor Pro - All rights reserved. Your images are processed locally and never uploaded to any server.</p>
    </footer>
    
    <div class="notification" id="notification">
        <i class="fas fa-check-circle"></i> Image compressed successfully!
    </div>
    
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // DOM Elements
            const fileInput = document.getElementById('fileInput');
            const browseBtn = document.getElementById('browseBtn');
            const dropArea = document.getElementById('dropArea');
            const compressionLevel = document.getElementById('compressionLevel');
            const sliderValue = document.querySelector('.slider-value');
            const compressBtn = document.getElementById('compressBtn');
            const previewImage = document.getElementById('previewImage');
            const originalSize = document.getElementById('originalSize');
            const compressedSize = document.getElementById('compressedSize');
            const savings = document.getElementById('savings');
            const qualityValue = document.getElementById('qualityValue');
            const downloadBtn = document.getElementById('downloadBtn');
            const newImageBtn = document.getElementById('newImageBtn');
            const formatOptions = document.querySelectorAll('input[name="format"]');
            const fileName = document.getElementById('fileName');
            const originalSizeInfo = document.getElementById('originalSizeInfo');
            const fileDetails = document.getElementById('fileDetails');
            const imagePlaceholder = document.getElementById('imagePlaceholder');
            const compressionProgress = document.getElementById('compressionProgress');
            const notification = document.getElementById('notification');
            
            // Variables
            let originalFile = null;
            let compressedBlob = null;
            
            // Event Listeners
            browseBtn.addEventListener('click', () => fileInput.click());
            fileInput.addEventListener('change', handleFileSelect);
            dropArea.addEventListener('dragover', handleDragOver);
            dropArea.addEventListener('dragleave', handleDragLeave);
            dropArea.addEventListener('drop', handleDrop);
            compressionLevel.addEventListener('input', updateSliderValue);
            compressBtn.addEventListener('click', compressImage);
            downloadBtn.addEventListener('click', downloadImage);
            newImageBtn.addEventListener('click', resetTool);
            
            // Initialize
            updateSliderValue();
            
            // Functions
            function handleFileSelect(e) {
                const file = e.target.files[0];
                processFile(file);
            }
            
            function handleDragOver(e) {
                e.preventDefault();
                dropArea.classList.add('drag-over');
            }
            
            function handleDragLeave(e) {
                e.preventDefault();
                dropArea.classList.remove('drag-over');
            }
            
            function handleDrop(e) {
                e.preventDefault();
                dropArea.classList.remove('drag-over');
                
                const file = e.dataTransfer.files[0];
                processFile(file);
            }
            
            function processFile(file) {
                if (!file || !file.type.match('image.*')) {
                    alert('Please select a valid image file (JPG, PNG, etc.)');
                    return;
                }
                
                originalFile = file;
                compressBtn.disabled = false;
                
                // Show file details
                const sizeInKB = (file.size / 1024).toFixed(1);
                fileName.textContent = file.name;
                originalSizeInfo.textContent = `${sizeInKB} KB`;
                fileDetails.classList.remove('hidden');
                
                // Show original file size
                originalSize.textContent = `${sizeInKB} KB`;
                
                // Reset preview
                compressedSize.textContent = '0 KB';
                savings.textContent = '0%';
                previewImage.classList.add('hidden');
                imagePlaceholder.classList.remove('hidden');
                imagePlaceholder.innerHTML = `
                    <i class="fas fa-image"></i>
                    <p>Compressed image will appear here</p>
                `;
                downloadBtn.disabled = true;
            }
            
            function updateSliderValue() {
                const value = compressionLevel.value;
                sliderValue.textContent = `${value}%`;
                qualityValue.textContent = `${value}%`;
            }
            
            function showNotification() {
                notification.classList.add('show');
                setTimeout(() => {
                    notification.classList.remove('show');
                }, 3000);
            }
            
            function compressImage() {
                if (!originalFile) return;
                
                // Show loading indicator
                imagePlaceholder.innerHTML = '<div class="spinner"></div><p>Compressing image...</p>';
                imagePlaceholder.classList.remove('hidden');
                previewImage.classList.add('hidden');
                compressionProgress.style.width = '0%';
                
                // Get selected format
                let format = 'jpeg';
                formatOptions.forEach(option => {
                    if (option.checked) format = option.value;
                });
                
                // Update progress
                let progress = 0;
                const progressInterval = setInterval(() => {
                    progress += 5;
                    compressionProgress.style.width = `${progress}%`;
                    if (progress >= 95) clearInterval(progressInterval);
                }, 100);
                
                // Use setTimeout to allow UI to update before compression starts
                setTimeout(() => {
                    const reader = new FileReader();
                    reader.onload = function(e) {
                        const img = new Image();
                        img.onload = function() {
                            const canvas = document.createElement('canvas');
                            const ctx = canvas.getContext('2d');
                            
                            // Calculate new dimensions to reduce file size
                            const maxDimension = 1920; // Max width/height for compression
                            let width = img.width;
                            let height = img.height;
                            
                            if (width > maxDimension || height > maxDimension) {
                                const ratio = Math.min(maxDimension / width, maxDimension / height);
                                width = Math.floor(width * ratio);
                                height = Math.floor(height * ratio);
                            }
                            
                            canvas.width = width;
                            canvas.height = height;
                            
                            // Draw image on canvas with new dimensions
                            ctx.drawImage(img, 0, 0, width, height);
                            
                            // Get quality value (0 to 1)
                            const quality = compressionLevel.value / 100;
                            
                            // Convert to blob with proper format handling
                            let mimeType = 'image/jpeg';
                            if (format === 'png') mimeType = 'image/png';
                            if (format === 'webp') mimeType = 'image/webp';
                            
                            canvas.toBlob(function(blob) {
                                clearInterval(progressInterval);
                                compressionProgress.style.width = '100%';
                                
                                compressedBlob = blob;
                                
                                // Create object URL for preview
                                const url = URL.createObjectURL(blob);
                                previewImage.src = url;
                                previewImage.classList.remove('hidden');
                                imagePlaceholder.classList.add('hidden');
                                
                                // Update file info
                                const originalSizeKB = (originalFile.size / 1024).toFixed(1);
                                const compressedSizeKB = (blob.size / 1024).toFixed(1);
                                const savingsPercent = ((1 - (blob.size / originalFile.size)) * 100).toFixed(1);
                                
                                originalSize.textContent = `${originalSizeKB} KB`;
                                compressedSize.textContent = `${compressedSizeKB} KB`;
                                savings.textContent = `${savingsPercent}%`;
                                
                                // Enable download button
                                downloadBtn.disabled = false;
                                
                                // Show success notification
                                showNotification();
                                
                            }, mimeType, quality);
                        };
                        img.src = e.target.result;
                    };
                    reader.readAsDataURL(originalFile);
                }, 100);
            }
            
            function downloadImage() {
                if (!compressedBlob) return;
                
                const url = URL.createObjectURL(compressedBlob);
                const a = document.createElement('a');
                a.href = url;
                
                // Get selected format
                let format = 'jpg';
                formatOptions.forEach(option => {
                    if (option.checked) format = option.value;
                });
                
                // Create filename
                const originalName = originalFile.name;
                const extensionIndex = originalName.lastIndexOf('.');
                const nameWithoutExtension = extensionIndex !== -1 ? 
                    originalName.substring(0, extensionIndex) : 
                    originalName;
                
                a.download = `${nameWithoutExtension}-compressed.${format}`;
                document.body.appendChild(a);
                a.click();
                document.body.removeChild(a);
                URL.revokeObjectURL(url);
            }
            
            function resetTool() {
                // Reset file input
                fileInput.value = '';
                
                // Reset variables
                originalFile = null;
                compressedBlob = null;
                
                // Reset UI
                compressBtn.disabled = true;
                downloadBtn.disabled = true;
                fileDetails.classList.add('hidden');
                compressionProgress.style.width = '0%';
                
                // Reset stats
                originalSize.textContent = '0 KB';
                compressedSize.textContent = '0 KB';
                savings.textContent = '0%';
                
                // Reset preview
                previewImage.classList.add('hidden');
                imagePlaceholder.classList.remove('hidden');
                imagePlaceholder.innerHTML = `
                    <i class="fas fa-image"></i>
                    <p>Compressed image will appear here</p>
                `;
            }
        });
    </script>
</body>
</html>
